{"version":3,"sources":["Store/Constants/ClimateConstants.js","Store/index.js","Store/Reducers/climateReducer.js","Store/Reducers/index.js","Routes/AppRoutes.js","Routes/Pages.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["ADD_CLIMATE_FAILURE","ADD_CLIMATE_STARTED","ADD_CLIMATE_SUCCESS","DELETE_CLIMATE","CLEAR_CLIMATE","persistConfig","key","storage","localForage","whitelist","persistedReducer","persistReducer","rootReducer","isProduction","process","NODE_ENV","Store","createStore","applyMiddleware","thunk","composeWithDevTools","persistor","persistStore","initialState","climates","climateReducer","state","action","type","loading","error","payload","filter","climate","index","reducers","rootReducers","combineReducers","appRoutes","to","path","Component","lazy","name","Pages","fallback","element","exact","map","i","App","store","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"+GAAA,0KAEO,IAAMA,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAiB,iBACjBC,EAAgB,iB,iLCGvBC,EAAgB,CACrBC,IAAY,OACZC,QAAYC,IACZC,UAAY,CAAC,mBAGRC,EAAmBC,YAAeN,EAAeO,KAEjDC,EAA0C,gBAApB,QAAP,EAAAC,SAAA,0KAAcC,UAEtBC,EAAQC,sBACpBP,EACAG,EACGK,0BAAgBC,KAChBC,8BAAoBF,0BAAgBC,OAG3BE,EAAYC,YAAaN,K,oFClBhCO,EAAe,CACpBC,SAAW,IAsCGC,EAnCQ,WAAmC,IAAlCC,EAAiC,uDAAzBH,EAAcI,EAAW,uCACxD,OAAQA,EAAOC,MACd,KAAK3B,IACJ,OAAO,2BACHyB,GADJ,IAECG,SAAU,IAEZ,KAAK3B,IACJ,OAAO,2BACHwB,GADJ,IAECG,SAAW,EACXC,MAAW,KACXN,SAAQ,sBAAOE,EAAMF,UAAb,QAAuBG,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAQI,YAEzC,KAAK/B,IACJ,OAAO,2BACH0B,GADJ,IAECG,SAAU,EACVC,MAAUH,EAAOI,QAAQD,QAE3B,KAAK3B,IACJ,OAAO,2BACHuB,GADJ,IAECF,SAAWE,EAAMF,SAASQ,QAAO,SAACC,EAASC,GAAV,OAAoBA,IAAUP,EAAOI,QAAQG,WAEhF,KAAK9B,IACJ,OAAO,2BACHsB,GADJ,IAECF,SAAW,KAEb,QACC,OAAOE,ICtCGS,EAAW,CACvBV,kBAGKW,EAAeC,0BAAgBF,GAEtBC,O,sICJFE,EAAY,CAOxB,CACCC,GAAY,IACZC,KAAY,IACZC,UAZeC,gBAAK,kBAAM,uDAa1BC,KAAY,qB,OCaCC,MAlBf,WACC,OACC,cAAC,WAAD,CAAUC,SAAU,6BAApB,SACC,eAAC,IAAD,WACC,cAAC,IAAD,CAAOL,KAAK,IAAIM,QAAS,cAAC,IAAD,CAAUP,GAAG,QAEtC,cAAC,IAAD,CAAOQ,OAAK,EAACP,KAAK,IAAlB,SACGF,EAAUU,KAAI,WAAsBC,GAAtB,IAAGT,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAT,OACf,cAAC,IAAD,CAAeM,OAAK,EAACP,KAAMA,EAAMM,QAAS,cAACL,EAAD,KAA9BQ,c,cCKHC,MAbf,WACC,OACC,cAAC,IAAD,UACC,eAAC,IAAD,CAAUC,MAAOnC,IAAjB,UACC,cAAC,IAAD,CAAaa,QAAS,6BAAOR,UAAWA,IAAxC,SACC,cAAC,EAAD,MAED,cAAC,IAAD,UCNW+B,EAdS,SAACC,GACpBA,GAAeA,aAAuBC,UACzC,8BAAqBC,MAAK,YAEnB,IADNC,EACK,EADLA,OAAQC,EACH,EADGA,OAAQC,EACX,EADWA,OAAQC,EACnB,EADmBA,OAAQC,EAC3B,EAD2BA,QAEhCJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJXQ,IAASC,OACR,cAAC,aAAD,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBZ,M","file":"static/js/main.575ede9b.chunk.js","sourcesContent":["// ShoppingCarConstants\n\nexport const ADD_CLIMATE_FAILURE = \"ADD_CLIMATE_FAILURE\";\nexport const ADD_CLIMATE_STARTED = \"ADD_CLIMATE_STARTED\";\nexport const ADD_CLIMATE_SUCCESS = \"ADD_CLIMATE_SUCCESS\";\nexport const DELETE_CLIMATE = \"DELETE_CLIMATE\";\nexport const CLEAR_CLIMATE = \"CLEAR_CLIMATE\";\n","import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport { composeWithDevTools }          from \"redux-devtools-extension\";\nimport thunk                            from \"redux-thunk\";\nimport localForage                      from \"localforage\";\n\n// Import Own Components\nimport rootReducer from \"./Reducers\";\n\nconst persistConfig = {\n\tkey       : \"root\",\n\tstorage   : localForage,\n\twhitelist : [\"climateReducer\"],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst isProduction = process?.env?.NODE_ENV === \"production\";\n\nexport const Store = createStore(\n\tpersistedReducer,\n\tisProduction\n\t\t? applyMiddleware(thunk)\n\t\t: composeWithDevTools(applyMiddleware(thunk)),\n);\n\nexport const persistor = persistStore(Store);\n","import {\n\tADD_CLIMATE_FAILURE,\n\tADD_CLIMATE_STARTED,\n\tADD_CLIMATE_SUCCESS,\n\tCLEAR_CLIMATE,\n\tDELETE_CLIMATE,\n} from \"Store/Constants/ClimateConstants\";\n\nconst initialState = {\n\tclimates : [],\n};\n\nconst climateReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase ADD_CLIMATE_STARTED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading : true,\n\t\t\t};\n\t\tcase ADD_CLIMATE_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading  : false,\n\t\t\t\terror    : null,\n\t\t\t\tclimates : [...state.climates, action?.payload],\n\t\t\t};\n\t\tcase ADD_CLIMATE_FAILURE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading : false,\n\t\t\t\terror   : action.payload.error,\n\t\t\t};\n\t\tcase DELETE_CLIMATE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tclimates : state.climates.filter((climate, index) => index !== action.payload.index),\n\t\t\t};\n\t\tcase CLEAR_CLIMATE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tclimates : [],\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default climateReducer;\n","import { combineReducers } from \"redux\";\n\n// Import Own Components\nimport climateReducer from \"./climateReducer\";\n\nexport const reducers = {\n\tclimateReducer,\n};\n\nconst rootReducers = combineReducers(reducers);\n\nexport default rootReducers;\n","import {\n\tlazy,\n} from \"react\";\n\n// const LazyLayout = lazy(() => import( /* webpackChunkName: \"UsersPage\" */ \"Layout/AppLayout\"));\nconst HomePage = lazy(() => import(/* webpackChunkName: \"HomePage\" */ \"Pages/HomePage\"));\n\nexport const appRoutes = [\n\t// {\n\t// \tto        : \"/dashboard\",\n\t// \tpath      : \"/dashboard/*\",\n\t// \tname      : \" DashBoard - DashBoard\",\n\t// \tComponent : LazyLayout,\n\t// },\n\t{\n\t\tto        : \"/\",\n\t\tpath      : \"/\",\n\t\tComponent : HomePage,\n\t\tname      : \"Home - DashBoard\",\n\t},\n];\n","import React, {\n\tSuspense,\n} from \"react\";\n\nimport {\n\tNavigate,\n\tRoute,\n\tRoutes,\n} from \"react-router-dom\";\n\n// Import Own Components\nimport { appRoutes } from \"./AppRoutes\";\n\nfunction Pages() {\n\treturn (\n\t\t<Suspense fallback={<></>}>\n\t\t\t<Routes>\n\t\t\t\t<Route path=\"*\" element={<Navigate to=\"/\" />} />\n\n\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t{ appRoutes.map(({ path, Component }, i) => (\n\t\t\t\t\t\t<Route key={i} exact path={path} element={<Component />} />\n\t\t\t\t\t)) }\n\t\t\t\t</Route>\n\n\t\t\t\t{/* <Route path=\"*\" element={<Navigate to=\"/dashboard\" />} /> */}\n\t\t\t</Routes>\n\t\t</Suspense>\n\t);\n}\n\nexport default Pages;\n","import React                       from \"react\";\nimport { PersistGate }             from \"redux-persist/integration/react\";\nimport { Provider }                from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { ToastContainer }          from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\n// Import Own Components\nimport Pages                from \"./Routes\";\nimport { Store, persistor } from \"./Store\";\n\nimport \"./Resources/sass/index.scss\";\n\nfunction App() {\n\treturn (\n\t\t<Router>\n\t\t\t<Provider store={Store}>\n\t\t\t\t<PersistGate loading={<></>} persistor={persistor}>\n\t\t\t\t\t<Pages />\n\t\t\t\t</PersistGate>\n\t\t\t\t<ToastContainer />\n\t\t\t</Provider>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport(\"web-vitals\").then(({\n\t\t\tgetCLS, getFID, getFCP, getLCP, getTTFB,\n\t\t}) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React, { StrictMode } from \"react\";\nimport ReactDOM              from \"react-dom\";\nimport App                   from \"./App\";\nimport reportWebVitals       from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<StrictMode>\n\t\t<App />\n\t</StrictMode>,\n\tdocument.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}